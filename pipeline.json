pipeline {
  agent any
  
   environment {
        GIT_URL              = 'http://zhanglei23@gitlab.bitautotech.com/sunshiyun/springBootAdmin.git'
        
        DOCKER_REGISTRY      = 'ccr.ccs.tencentyun.com'
        DOCKER_IMAGE_NAME    = 'easypass-chehou/chechou-sadmin'

        DOCKER_BUILD_FILE    = 'Dockerfile'
        DOCKER_BUILD_WORKDIR = '.'
        DOCKER_IMAGE_ENV     = 'test'
    }
  
  stages {
    stage('接取代码') {
      steps {
        git(url: "${GIT_URL}", branch: 'master',credentialsId:'27266561-7a06-4b45-9565-3f9fad96c85b')
      }
    }

    stage('加载环境') {
      steps {
        sh 'ls'
        sh 'java -version'
        sh 'echo Image version:  ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_ENV}-v${BUILD_ID}'        
      }
    }
    
    stage('编译代码') {
      steps {
        sh 'rm -rf ./app.jar'
        sh 'mvn compile'
      }
    }

    stage('JAR制品') {
        steps {
          sh 'mvn clean package -Dmaven.test.skip=true'
        }
        post {
            always {
                archiveArtifacts artifacts: 'target/**/*.jar', fingerprint: true
            }
        }
    }

    stage('镜像打包') {
        steps {
         sh 'cp ./target/*.jar ./app.jar'
         sh 'ls'
         sh 'docker build -f ${DOCKER_BUILD_FILE} -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_ENV}-v${BUILD_ID} ${DOCKER_BUILD_WORKDIR}'
       }
    }

    stage('镜像上传') {
        input {
                message "确定要上传镜像吗?"
                ok "Yes, we should."
                submitter "wangjn"
        }
        steps {
             withDockerRegistry([credentialsId:"docker_user", url:"http://${DOCKER_REGISTRY}"]) {
                sh 'docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_ENV}-v${BUILD_ID}'
            }
            
            sh 'rm -rf ./app.jar'
            sh 'docker rmi ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_ENV}-v${BUILD_ID}'
        }
    }


  }
}
